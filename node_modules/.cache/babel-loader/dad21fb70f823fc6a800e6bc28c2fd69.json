{"ast":null,"code":"var _jsxFileName = \"/Users/johnny/prod/widgets/src/components/DropDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DropDown = _ref => {\n  _s();\n\n  let {\n    options,\n    selected,\n    onSelectedChange\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n  useEffect(() => {\n    const onBodyClick = event => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n\n      setOpen(false);\n    };\n\n    document.body.addEventListener('click', onBodyClick, {\n      capture: true\n    });\n    return () => {\n      document.body.removeEventListener('click', onBodyClick, {\n        capture: true\n      });\n    };\n  }, []);\n  const reneredOptions = options.map(option => {\n    if (option.value === selected.value) {\n      return null; // Means don't render anything\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      onClick: () => onSelectedChange(option),\n      children: option.label\n    }, option.value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: \"ui form\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label\",\n        children: \"Select a Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOpen(!open),\n        className: `ui selection dropdown ${open ? 'visible active' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"dropdown icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: selected.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `menu ${open ? 'visible transition' : ''}`,\n          children: reneredOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDown, \"wl9VvfhnMVWQ+kCekFjcRPEi3/0=\");\n\n_c = DropDown;\nexport default DropDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropDown\");","map":{"version":3,"sources":["/Users/johnny/prod/widgets/src/components/DropDown.js"],"names":["React","useState","useEffect","useRef","DropDown","options","selected","onSelectedChange","open","setOpen","ref","onBodyClick","event","current","contains","target","document","body","addEventListener","capture","removeEventListener","reneredOptions","map","option","value","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;AAEA,MAAMC,QAAQ,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAA4C;AAC5D,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAMS,GAAG,GAAGP,MAAM,EAAlB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAIF,GAAG,CAACG,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAAJ,EAAwC;AACtC;AACD;;AACDN,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD,KALD;;AAMAO,IAAAA,QAAQ,CAACC,IAAT,CAAcC,gBAAd,CAA+B,OAA/B,EAAwCP,WAAxC,EAAqD;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KAArD;AAEA,WAAO,MAAM;AACXH,MAAAA,QAAQ,CAACC,IAAT,CAAcG,mBAAd,CAAkC,OAAlC,EAA2CT,WAA3C,EAAwD;AACtDQ,QAAAA,OAAO,EAAE;AAD6C,OAAxD;AAGD,KAJD;AAKD,GAdQ,EAcN,EAdM,CAAT;AAgBA,QAAME,cAAc,GAAGhB,OAAO,CAACiB,GAAR,CAAaC,MAAD,IAAY;AAC7C,QAAIA,MAAM,CAACC,KAAP,KAAiBlB,QAAQ,CAACkB,KAA9B,EAAqC;AACnC,aAAO,IAAP,CADmC,CACtB;AACd;;AACD,wBACE;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAE,MAAMjB,gBAAgB,CAACgB,MAAD,CAHjC;AAAA,gBAKGA,MAAM,CAACE;AALV,OACOF,MAAM,CAACC,KADd;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAbsB,CAAvB;AAeA,sBACE;AAAK,IAAA,GAAG,EAAEd,GAAV;AAAe,IAAA,SAAS,EAAC,SAAzB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,OAAO,EAAE,MAAMD,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,QAAA,SAAS,EAAG,yBAAwBA,IAAI,GAAG,gBAAH,GAAsB,EAAG,EAFnE;AAAA,gCAIE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,oBAAuBF,QAAQ,CAACmB;AAAhC;AAAA;AAAA;AAAA;AAAA,gBALF,eAME;AAAK,UAAA,SAAS,EAAG,QAAOjB,IAAI,GAAG,oBAAH,GAA0B,EAAG,EAAzD;AAAA,oBACGa;AADH;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApDD;;GAAMjB,Q;;KAAAA,Q;AAsDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst DropDown = ({ options, selected, onSelectedChange }) => {\n  const [open, setOpen] = useState(false);\n  const ref = useRef();\n\n  useEffect(() => {\n    const onBodyClick = (event) => {\n      if (ref.current.contains(event.target)) {\n        return;\n      }\n      setOpen(false);\n    };\n    document.body.addEventListener('click', onBodyClick, { capture: true });\n\n    return () => {\n      document.body.removeEventListener('click', onBodyClick, {\n        capture: true,\n      });\n    };\n  }, []);\n\n  const reneredOptions = options.map((option) => {\n    if (option.value === selected.value) {\n      return null; // Means don't render anything\n    }\n    return (\n      <div\n        key={option.value}\n        className=\"item\"\n        onClick={() => onSelectedChange(option)}\n      >\n        {option.label}\n      </div>\n    );\n  });\n\n  return (\n    <div ref={ref} className=\"ui form\">\n      <div className=\"field\">\n        <label className=\"label\">Select a Color</label>\n        <div\n          onClick={() => setOpen(!open)}\n          className={`ui selection dropdown ${open ? 'visible active' : ''}`}\n        >\n          <i className=\"dropdown icon\"></i>\n          <div className=\"text\">{selected.label}</div>\n          <div className={`menu ${open ? 'visible transition' : ''}`}>\n            {reneredOptions}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DropDown;\n"]},"metadata":{},"sourceType":"module"}